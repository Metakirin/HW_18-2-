{"version":3,"sources":["js/content.js","js/list.js","js/reset-form.js","js/form.js","js/app.js"],"names":["Content","container","data","updateList","handleClickTrashBtn","_clickTrashBtn","bind","innerHTML","id","btnNode","document","createElement","classList","value","setAttribute","addEventListener","_clickEditBtn","event","currentTarget","getAttribute","form","querySelector","titleField","contentField","idField","dateField","fetch","method","then","response","json","list","forEach","item","title","content","date","$","modal","catch","error","console","isConfirm","confirm","_clear","btnEdit","_createEditButton","btnTrash","_createTrashButton","template","html","btnWrap","append","List","activeItemId","handleClickList","_clickList","_init","target","remove","_removeActive","add","render","includes","_selectListItem","resetForm","reset","querySelectorAll","input","Form","btnSubmit","listContainer","handleSubmit","_submit","num","parsedNum","resultContent","replace","day","_parseNumber","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","url","headers","body","JSON","stringify","preventDefault","currentMethod","currentDate","Date","_setMetaData","getTime","_buildDate","formData","FormData","name","_parseStringToHtml","_send","formNode","createBtnNode","listNode"],"mappings":"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A,AGJkB,UHId,CAACe,SAAL,EAAgB,KCPXxC,MAAM;ADSXwB,ACTW,MDSXA,KAAK,qBAAclB,EAAd,GAAoB;AAAEmB,AGL3B,QHK2BA,EGLvB8D,GAAG,CHK0B,EAAE,AGLzB,WAAV;AHKyB,AGHzB,AFLA,ODQK,CAAL,CACG7D,CGJCD,CFLCzB,EDQL,CACQ,CCTR,CEKU,EFLEA,EEKE,EFLd,EDSS2B,CGJT,EAAqB4D,GAAG,EHIhB,CGJmBA,GAAG,cAAOvF,IAAI,CAACM,EAAZ,CAAT;AHIb,AGFRkB,MAAAA,KAAK,CAAC+D,GHEgB5D,AGFjB,EAAM,MHEmB,CAACC,IAAT,EAAd;AAAA,AGDNH,AFPF,ODOA,CGAEA,CHECC,ECTEgB,EDOL,CAEQ,AGFA,EAANjB,CFPF,KEMW,EHGFzB,IAAD,EAAU;AACd,AGFFwF,QAAAA,OAAO,EAAE;AHGP,AGHS,AFNb,QDSI,GCTCxF,EDSG,CAAC0C,CCTT,CAAUZ,IDSN,GAFc,ACPlB,CDUI,ACVc,EEMW,QFNVC,IAAD,EAAU;AEMjB,AFLT,SEGS,GFHHgB,QAAQ,8DAC0BhB,IAAI,CAACzB,EAD/B,gCAEJyB,IAAI,CAACC,KAFD,qCAGDD,IAAI,CAACG,IAHJ,qCAAd;AEMAuD,AFCA,QEDAA,AFCA,IEDI,EAAEC,AFCF,CAAC3F,GEDK,CAAC4F,KFCX,CAAetF,GEDT,CAAeL,IAAf,CFCN,GAA2B,MAAI,CAACD,SAAL,CAAeM,SAAf,GAA2B0C,QAAtD;ADGE,AGPO,AFKV,OELI,AFJL,CEIA,CAKGrB,GHEK,CGPR,CAKQ,GHEI,CAACzB,MGFJ0B,IHEL,EAAqB,EGFjB;AHGF,AGHE,UHGF,KAAI,AGHYA,CHGX1B,OGHmB,CAAC2B,EHGzB,CAAgB5B,CGHA,EAAd,CHGkB,CAAC6B,IAArB;AACD,AGJG,AFER,OEPA,EAMGH,CFCC,GEPJ,CAMQ,CFCC0B,SEDApD,GFCT,CEDQ,CFCe,CEDL;AHIf,AGHC,AFCF,ODPF,CGMI,CHIDqC,IGJK,AFCDyB,CDPP,AGMSjC,CHIA,GGJL,CAAU+B,MHIJtB,AGJN,CAAiBtC,EFCnB,CAAqB,CDGd,AGJgB,CAAC6B,GFCEuB,CEDxB,WFCF;ADGO,AGHN,AFCF,OETD,EASGf,KATH,CHWoBE,AGFX,OHEkB,CAACD,EGFlBA,GHEU,CAAcA,CGFzB,IHEW,CAAX;AAAA,AGFA,AFCV,ODTC,QGQoBC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AHGV,AGHU,OATT;AAUD;;2BHIMtC,MAAMC,YAAY;AACvB,WAAKD,IAAL,GAAYA,IAAZ,WGHWM,IAAI4B,MAAM;AHIrB,AGHA,WHGKjC,UAAL,GAAkBA,UAAlB,CAFuB,CAEO;AGF9B,UAAI,KAAKqB,OAAL,CAAaX,KAAb,IAAsB,KAAKY,SAAL,CAAeZ,KAAzC,EAAgD;AHGhD,AGDA,UHCMgC,CGDDrB,MHCQ,CGDb,CAAaX,CHCG,IGDhB,CHCqBiC,EGDAtC,EAArB,aHCgB,CAAuB,KAAKN,IAAL,CAAUM,EAAjC,CAAhB;AGAA,WAAKiB,SAAL,CAAeZ,KAAf,GAAuBuB,IAAvB;AHCA,AGAD,UHAOW,QAAQ,GAAG,KAAKC,kBAAL,CAAwB,KAAK9C,IAAL,CAAUM,EAAlC,CAAjB;;AACA,UAAMyC,QAAQ,mDACkB,KAAK/C,IAAL,CAAUgC,KAD5B,iEAEN,KAAKhC,IAAL,CAAUkC,IAFJ,oDAGc,KAAKlC,IAAL,CAAUgD,IAHxB,iBAAd;4BGCMjC,OAAO;AHKb,AGJAA,MAAAA,KHIK2B,AGJA,CAACkD,KHIN,SGJA;AACA,UAAMC,aAAa,GAAG,KAAK3E,IAAL,CAAUD,YAAV,CAAuB,aAAvB,CAAtB;AHIA,AGFA,UAAM6E,CHED/F,SAAL,CAAeM,AGFE,GAAG,IAAI0F,EHExB,EGFoB,CHEO,CGF3B,IHEgChG,SAAL,CAAeM,SAAf,GAA2B0C,QAAtD;AAEA,UAAME,OAAO,GAAGzC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAwC,AGJA,MHIAA,KGJK+C,EHIE,CAACtF,SAAR,AGJA,CHIkBC,AGJAmF,KHIlB,GAA0B,GGJG,CAACG,OAAZ,EAAlB,EAAyC,KAAKC,UAAL,CAAgBJ,KHIzD,MGJyC,CAAzC;AHKA7C,MAAAA,OAAO,CAACC,MAAR,CAAeP,OAAf,EAAwBE,QAAxB;AACA,AGJA,UAAMsD,CHIDpG,OGJS,EHId,CAAemD,AGJE,IAAIkD,EHIrB,CAAsBnD,KGJL,CAAa,CHI9B,IGJmC/B,IAAlB,CAAjB;AHKD,AGJC,UAAMlB,IAAI,GAAG,EAAb;;AARa,iDAUemG,QAVf;AAAA;;AAAA;AAUb,4DAAsC;AAAA;AAAA,cAA1BE,IAA0B;AAAA,cAApB1F,KAAoB;;AACpCX,UAAAA,IAAI,CAACqG,IAAD,CAAJ,GAAa1F,KAAb;AACD;AAZY;AAAA;AAAA;AAAA;AAAA;;AAcbX,MAAAA,IAAI,CAACgD,IAAL,GAAY,KAAKsD,kBAAL,CAAwBtG,IAAI,CAACiC,OAA7B,CAAZ;;AAEA,WAAKsE,KAAL,CAAWvG,IAAX,EAAiB6F,aAAjB;;AAEA,gCAAU,KAAK3E,IAAf;AACAiB,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBC,KAAhB,CAAsB,MAAtB,EAnBa,CAmBkB;AAChC","file":"app.c3f9f951.js","sourceRoot":"..\\client","sourcesContent":["export class Content {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.data = {};\r\n    this.updateList = null;\r\n\r\n    this.handleClickTrashBtn = this._clickTrashBtn.bind(this);\r\n\r\n    // this._init();\r\n  }\r\n\r\n  // _init() {}\r\n\r\n  _clear() {\r\n    this.container.innerHTML = \"\";\r\n  }\r\n\r\n  _createEditButton(id) {\r\n    const btnNode = document.createElement(\"button\");\r\n\r\n    btnNode.classList.value = \"btn btn-secondary\";\r\n    btnNode.innerHTML = `<i class=\"fas fa-pencil-alt fa-lg\"></i>`;\r\n    btnNode.setAttribute(\"data-id\", id);\r\n\r\n    btnNode.addEventListener(\"click\", this._clickEditBtn);\r\n\r\n    return btnNode;\r\n  }\r\n\r\n  _createTrashButton(id) {\r\n    const btnNode = document.createElement(\"button\");\r\n\r\n    btnNode.classList.value = \"btn btn-dark ml-2\";\r\n    btnNode.innerHTML = `<i class=\"far fa-trash-alt fa-lg\"></i>`;\r\n    btnNode.setAttribute(\"data-id\", id);\r\n\r\n    btnNode.addEventListener(\"click\", this.handleClickTrashBtn);\r\n\r\n    return btnNode;\r\n  }\r\n\r\n  _clickEditBtn(event) {\r\n    const id = event.currentTarget.getAttribute(\"data-id\");\r\n    const form = document.querySelector(\"#form\");\r\n    const titleField = form.querySelector('[name=\"title\"]');\r\n    const contentField = form.querySelector('[name=\"content\"]');\r\n    const idField = form.querySelector('[name=\"id\"]');\r\n    const dateField = form.querySelector('[name=\"date\"]');\r\n\r\n    form.setAttribute(\"data-method\", \"PUT\");\r\n\r\n    fetch(\"/api/data\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        data.list.forEach((item) => {\r\n          if (item.id == id) {\r\n            titleField.value = item.title;\r\n            contentField.value = item.content;\r\n            idField.value = item.id;\r\n            dateField.value = item.date;\r\n\r\n            $(\"#formModal\").modal(\"show\");\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  _clickTrashBtn(event) {\r\n    const id = event.currentTarget.getAttribute(\"data-id\");\r\n    const isConfirm = confirm(\"Вы уверены, что хотите удалить пост?\");\r\n\r\n    if (!isConfirm) return;\r\n\r\n    fetch(`/api/data/${id}`, { method: \"DELETE\" })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Очистить контент послу удаления\r\n        this._clear();\r\n        // Если метод для обновления списка передали в этот класс, то можно запустить\r\n        if (this.updateList) {\r\n          this.updateList(data.list);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  render(data, updateList) {\r\n    this.data = data;\r\n    this.updateList = updateList; // Присваиваем к свойству this.updateList колбэк updateList\r\n    const btnEdit = this._createEditButton(this.data.id);\r\n    const btnTrash = this._createTrashButton(this.data.id);\r\n    const template = `\r\n      <h3 class = \"content-title\">${this.data.title} <i class=\"fas fa-paperclip\"></i></h3>\r\n      <h6>${this.data.date}</h6>\r\n      <div class=\"text-light\">${this.data.html}</div>\r\n    `;\r\n\r\n    this._clear();\r\n    this.container.innerHTML = this.container.innerHTML + template;\r\n\r\n    const btnWrap = document.createElement(\"div\");\r\n    btnWrap.classList.value = \"mt-auto d-flex justify-content-end\";\r\n    btnWrap.append(btnEdit, btnTrash);\r\n    this.container.append(btnWrap);\r\n  }\r\n}\r\n","import { Content } from \"./content\";\r\n\r\nexport class List {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.activeItemId = null;\r\n    this.data = [];\r\n    this.content = new Content(document.querySelector(\"#content\"));\r\n\r\n    this.handleClickList = this._clickList.bind(this);\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this.container.addEventListener(\"click\", this.handleClickList);\r\n  }\r\n\r\n  _clear() {\r\n    this.container.innerHTML = \"\";\r\n  }\r\n\r\n  _removeActive() {\r\n    if (!this.activeItemId) return;\r\n\r\n    const target = this.container.querySelector(\r\n      `[data-id=\"${this.activeItemId}\"]`\r\n    );\r\n\r\n    target.classList.remove(\"active\");\r\n  }\r\n\r\n  _selectListItem(id) {\r\n    const target = this.container.querySelector(`[data-id=\"${id}\"]`);\r\n\r\n    // После удаления этот элемент теряется, надо сделать проверку\r\n    if (target) {\r\n      this._removeActive();\r\n      this.activeItemId = id;\r\n      target.classList.add(\"active\");\r\n    } else {\r\n      // Если элемент удалён надо обнулить это свойство\r\n      this.activeItemId = null;\r\n    }\r\n\r\n    this.data.forEach((item) => {\r\n      if (id == item.id) {\r\n        // Передаём метод для рендера списка, чтобы там вызывать его для обновления\r\n        // Надо передать контекст вызова, this.render использует свойства из текущего класса\r\n        // Если не сделать bind мы потеряем свойства, которые хранятся в этом классе\r\n        this.content.render(item, this.render.bind(this));\r\n      }\r\n    });\r\n  }\r\n\r\n  _clickList(event) {\r\n    const target = event.target;\r\n\r\n    if (target.classList.value.includes(\"list-item\")) {\r\n      const id = target.getAttribute(\"data-id\");\r\n\r\n      this._selectListItem(id);\r\n    }\r\n  }\r\n\r\n  render(data) {\r\n    this.data = data;\r\n    this._clear();\r\n\r\n    this.data.forEach((item) => {\r\n      const template = `\r\n        <div class=\"list-item p-3\" data-id=\"${item.id}\">\r\n          <h5>${item.title}</h5>\r\n          <small>${item.date}</small>\r\n        </div>\r\n      `;\r\n\r\n      this.container.innerHTML = this.container.innerHTML + template;\r\n    });\r\n\r\n    if (this.activeItemId) {\r\n      this._selectListItem(this.activeItemId);\r\n    }\r\n  }\r\n}\r\n","// Скрытые поля не сбрасывают значение при вызове form.reset(),\r\n// делаем очистку формы в отдельной функции\r\nexport function resetForm(form) {\r\n  form.reset();\r\n\r\n  // Найдём все скрытые поля в форме и сбросим их значение\r\n  [...form.querySelectorAll('[type=\"hidden\"]')].forEach((input) => {\r\n    input.value = '';\r\n  });\r\n}\r\n","import { List } from \"./list\";\r\nimport { resetForm } from \"./reset-form\";\r\n\r\nexport class Form {\r\n  constructor(form) {\r\n    this.form = form;\r\n    this.idField = document.querySelector('[name=\"id\"]');\r\n    this.dateField = document.querySelector('[name=\"date\"]');\r\n\r\n    this.btnSubmit = document.querySelector('[type=\"submit\"]');\r\n    this.listContainer = document.querySelector(\"#list\");\r\n    this.list = new List(this.listContainer);\r\n\r\n    this.handleSubmit = this._submit.bind(this);\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this.btnSubmit.addEventListener(\"click\", this.handleSubmit);\r\n  }\r\n\r\n  // Добавить ноль перед числом\r\n  _parseNumber(num) {\r\n    let parsedNum = num;\r\n\r\n    return parsedNum < 10 ? \"0\" + parsedNum : parsedNum;\r\n  }\r\n\r\n  _parseStringToHtml(content) {\r\n    const resultContent = content\r\n      .replace(/#(.+)/gim, \"<h1>$1</h1>\")\r\n      .replace(/#{2}(.+)/gim, \"<h2>$1</h2>\")\r\n      .replace(/#{3}(.+)/gim, \"<h3>$1</h3>\")\r\n      .replace(/#{4}(.+)/gim, \"<h4>$1</h4>\")\r\n      .replace(/(\\*{2})(.+)(\\*{2})/gim, \"<strong>$2</strong>\")\r\n      .replace(/(~{2})(.+)(~{2})/gim, \"<strike>$2</strike>\")\r\n      .replace(\r\n        /(http[s]:\\/\\/)(.+)/gim,\r\n        `<a href=\"$1$2\" target=\"_blank\" rel=\"noopener\">$1$2</a>`\r\n      )\r\n      .replace(/-{3}/gim, \"<hr>\")\r\n      .replace(/-\\|/gim, \"<br>\")\r\n      .replace(/(\\+{2})(.+)(\\+{2})/gim, `<span class=\"text-success\">$2</span>`)\r\n      .replace(/(\\-{2})(.+)(\\-{2})/gim, `<span class=\"text-danger\">$2</span>`)\r\n      .replace(\r\n        /\\*(.+)/gim,\r\n        `<ul> \r\n    <li>$1</li> \r\n    </ul>`\r\n      );\r\n\r\n    return resultContent;\r\n  }\r\n\r\n  _buildDate(date) {\r\n    // dd.mm.YYYY hh:mm\r\n    let day = this._parseNumber(date.getDate());\r\n    let month = this._parseNumber(date.getMonth() + 1);\r\n    let year = date.getFullYear();\r\n\r\n    let hours = this._parseNumber(date.getHours());\r\n    let minutes = this._parseNumber(date.getMinutes());\r\n\r\n    return `${day}.${month}.${year} ${hours}:${minutes}`;\r\n  }\r\n\r\n  // Метод отправки зависит от аргумента method\r\n  _send(data, method) {\r\n    let url = \"/api/data\";\r\n\r\n    if (method == \"PUT\") url = url + `/${data.id}`;\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json;charset=utf-8\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.list.render(data.list);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  _setMetaData(id, date) {\r\n    // Если мы редактируем, то метаданные уже есть и менять их не будем\r\n    if (this.idField.value && this.dateField.value) return;\r\n\r\n    this.idField.value = id;\r\n    this.dateField.value = date;\r\n  }\r\n\r\n  _submit(event) {\r\n    event.preventDefault();\r\n    const currentMethod = this.form.getAttribute(\"data-method\");\r\n\r\n    const currentDate = new Date();\r\n    this._setMetaData(currentDate.getTime(), this._buildDate(currentDate));\r\n\r\n    const formData = new FormData(this.form);\r\n    const data = {};\r\n\r\n    for (const [name, value] of formData) {\r\n      data[name] = value;\r\n    }\r\n\r\n    data.html = this._parseStringToHtml(data.content);\r\n\r\n    this._send(data, currentMethod);\r\n\r\n    resetForm(this.form);\r\n    $(\"#formModal\").modal(\"hide\"); // Открыть модальное окно\r\n  }\r\n}\r\n","import { Form } from './form';\r\nimport { List } from './list';\r\nimport { resetForm } from './reset-form';\r\n\r\nconst formNode = document.querySelector('#form');\r\nnew Form(formNode);\r\n\r\n// ---------------------------------------------------\r\n\r\nconst createBtnNode = document.querySelector('#createBtn');\r\ncreateBtnNode.addEventListener('click', () => {\r\n  formNode.setAttribute('data-method', 'POST');\r\n  resetForm(formNode);\r\n  $('#formModal').modal('show');\r\n});\r\n\r\nconst listNode = document.querySelector('#list');\r\nconst list = new List(listNode);\r\n\r\nfetch('/api/data', { method: 'GET' })\r\n  .then((response) => response.json())\r\n  .then((data) => list.render(data.list))\r\n  .catch((error) => console.error(error));\r\n"]}